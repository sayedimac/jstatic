@page "/fetchtable"
@using JStatic.Shared
@using Microsoft.AspNetCore.WebUtilities
@inject HttpClient Http
@inject NavigationManager NavManager

<h1>Retrieve Storage Table rows</h1>

<p>This component demonstrates fetching rows from a storage account Table</p>
@if (theItems == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>
    <select name="partkey" id="partkey"  @onchange="Navigate">
      <option>Select a Partion Key</option>  
      <option value="website1">Website1</option>
      <option value="website2">Website2</option>
    </select>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Quantity</th>
                <th>Is Sale</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in theItems)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Quantity</td>
                    <td>@item.Sale</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Product[] theItems = new Product[] { };
    public string SelectedValue = "";   
    private void Navigate(ChangeEventArgs selectEvent)
    {
        SelectedValue = selectEvent.Value.ToString();
        var queryParams = new Dictionary<string, string>
        {
            ["partkey"] = SelectedValue
        };
        NavManager.NavigateTo(QueryHelpers.AddQueryString("FetchTable", queryParams));
    }
    protected override async Task OnInitializedAsync()
    {
        try
        {
            theItems = await Http.GetFromJsonAsync<Product[]>("/api/querytabledata?partkey=" + SelectedValue ) ?? new Product[] { };
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }
}
